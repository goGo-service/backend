{
  "openapi": "3.0.3",
  "info": {
    "title": "goGO Auth handlers",
    "description": "goGo docs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Авторизация или регистрация",
        "operationId": "auth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestBody"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Передан неверный silent_token VK ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "201": {
            "description": "Ответ на запрос авторизации нового пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthNeedRegistrationResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ответ на запрос авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "description": "Регистрация",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Передан неверный silent_token VK ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthRequestBody": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "required": true
          }
        }
      },
      "SignUpRequestBody": {
        "description": "New schema",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "code",
          "username"
        ]
      },
      "BadRequestResponse": {
        "description": "Некорректные параметры запроса",
        "type": "object",
        "properties": {
          "error_text": {
            "type": "string",
            "required": true
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "action": {
            "description": "Действие авторизации",
            "type": "string",
            "enum": [
              "AUTH"
            ]
          },
          "access_token": {
            "description": "Токен доступа",
            "type": "string"
          }
        },
        "required": [
          "action",
          "access_token"
        ]
      },
      "AuthNeedRegistrationResponse": {
        "type": "object",
        "properties": {
          "action": {
            "description": "Действие регистрации",
            "type": "string",
            "enum": [
              "REGISTER"
            ]
          },
          "email": {
            "description": "Электронная почта пользователя",
            "type": "string",
            "format": "email"
          },
          "first_name": {
            "description": "Имя пользователя",
            "type": "string"
          },
          "last_name": {
            "description": "Фамилия пользователя",
            "type": "string"
          }
        },
        "required": [
          "action",
          "first_name",
          "last_name",
          "email"
        ]
      }
    }
  }
}
